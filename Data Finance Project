#!/usr/bin/env python
# coding: utf-8

# ___

#Finance Data Project from 2006 to 2016
# 
# In this data project we will focus on exploratory data analysis of stock prices. Keep in mind, this project is just meant to practice your visualization and pandas skills, it is not meant to be a robust financial analysis or be taken as financial advice.
# We'll focus on bank stocks and see how they progressed throughout the [financial crisis](https://en.wikipedia.org/wiki/Financial_crisis_of_2007%E2%80%9308) all the way to early 2016.

#import needed libraries

from pandas_datareader import data, wb
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import datetime as dt
import matplotlib.pyplot as plt
import seaborn as sns
sns.set_style('whitegrid')
import plotly
import cufflinks as cf
cf.go_offline()
get_ipython().run_line_magic('matplotlib', 'inline')


# ## Data
# We will get stock information for the following banks:
# *  Bank of America
# * CitiGroup
# * Goldman Sachs
# * JPMorgan Chase
# * Morgan Stanley
# * Wells Fargo
# The data we use from Jan 1st 2006 to Jan 1st 2016 using yahoo as a source
 
start = dt.datetime(2006, 1, 1)
end = dt.datetime(2016, 1, 1)
src='yahoo'

#Bank of America
BAC=data.DataReader("BAC",src,start,end)

#CitiGroup
C = data.DataReader("C", src, start, end)

# Goldman Sachs
GS = data.DataReader("GS",src, start, end)

# JPMorgan Chase
JPM = data.DataReader("JPM",src, start, end)

# Morgan Stanley
MS = data.DataReader("MS",src, start, end)

# Wells Fargo
WFC = data.DataReader("WFC",src, start, end)

#create the list of ticker aka the bank code

tickers=['BAC','C','GS','JPM','MS','WFC']#


#create a concataned data frame , using the columns(since they use same index) 

bank_stocks=pd.concat([BAC,C,GS,JPM,MS,WFC],axis=1,keys=tickers)
bank_stocks


#Set the column name levels

bank_stocks.columns.names = ['Bank Ticker','Stock Info']


#Check the head of the bank_stocks dataframe.


bank_stocks.head(5)

# max closing price for each bank stock throught the time period
bank_stocks.xs(key='Close',axis=1,level='Stock Info').max()

#set a dataframe that store the return data, using the fucntion pct.change()

returns=pd.DataFrame()
for tick in tickers:
    returns[tick+' Return']=bank_stocks[tick]['Close'].pct_change()
    
returns.head()


#create pairplot to analyse the data(Pair Plots.png)


sns.pairplot(returns)

#return the worst day in the time for each bank


returns.idxmin()


#return the best day in the time for each bank

returns.idxmax()








#return the standard deviation ,returning which stocks are riskiest and which arent (Closer to 1 , move around a lot)

returns.std()


#Now for the 2015 year


returns['2015-01-01':'2015-12-31'].std()


# Distplot using 2008 returns for Morgan Stanley, which is pretty stable(MS Return distplot.png)

plt.figure(figsize=(16, 6))
sns.distplot(returns['2015-01-01':'2015-12-31']['MS Return'],bins=50)


# Distplot using 2008 returns for CitiGroup, this distrubition is far more worse and the curve is more distibuted around 0 (C Return distplot.png)

plt.figure(figsize=(16, 6))
sns.distplot(returns['2008-01-01':'2008-12-31']['C Return'],bins=50)

#Line plot showing Close price for each bank for the entire index of time, where it clearly seable the crash with of citigroup and the effect of the financial crisis (Bank Stock Closing Trend.png)

bank_stocks.xs(key='Close',axis=1,level='Stock Info').plot(figsize=(16,6))


#Line plot graph using Plotly(Bank Stock Closing Trend Plotly.png)


bank_stocks.xs(key='Close',axis=1,level='Stock Info').iplot()


#Plotting the 30 day average againg the data of Bank of America(BAC Moving Averages.png),help to see the bank general trend

plt.figure(figsize=(16,6))
BAC['Close'].loc['2008-01-01':'2009-01-01'].rolling(window=30).mean().plot(label='Â£0 Days Rolling Avg')
BAC['Close'].loc['2008-01-01':'2009-01-01'].plot(label='Bank Of America closing')
plt.legend()


#Heat map that show the correlation between  closing prices(Heatmap clos corr.png)


sns.heatmap(bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr(),annot=True)


#Cluster map that show the same correlation(Cluster Map close corr.png)


sns.clustermap(bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr(),annot=True)

#Candle plot of BAC in 2015,tell if the stock went up or down during the day (green=up red=down)(BAC 2015 Candle.png)

BAC[['Open','High','Low','Close']].loc['2015-01-01':'2016-01-01'].iplot(kind='candle')


#Simple moving average plot of MS in 2015, use to  compare the stock with the moving average (MS 2015 sma.png)

MS['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='sma')

#Bollinger Band Plot for BAC in 2015, use to see the moving std(BAC 2015 boll.png)

BAC['Close'].loc['2015-01-01':'2016-01-01'].ta_plot(study='boll')

